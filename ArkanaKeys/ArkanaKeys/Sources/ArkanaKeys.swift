// DO NOT MODIFY
// Automatically generated by Arkana (https://github.com/rogerluan/arkana)

import Foundation
import ArkanaKeysInterfaces

public enum Keys {
    @inline(__always)
    fileprivate static let salt: [UInt8] = [
        0xee, 0xae, 0x95, 0x69, 0xc1, 0xc3, 0xb9, 0x1b, 0x37, 0xc7, 0xc4, 0xdc, 0x30, 0xac, 0x88, 0x40, 0xbc, 0x97, 0xfa, 0x52, 0x34, 0xd1, 0xa0, 0xec, 0xe0, 0x4, 0xd4, 0xf9, 0xf1, 0xb5, 0x32, 0x36, 0xee, 0x10, 0x1, 0xd0, 0xdd, 0x6a, 0x77, 0xf0, 0xfa, 0xed, 0xf0, 0xe5, 0, 0x7f, 0x90, 0xea, 0xc1, 0x24, 0x12, 0x8c, 0x92, 0x7, 0x6e, 0xd1, 0x93, 0xbf, 0xb3, 0xcd, 0x5d, 0x39, 0x9b, 0x79
    ]

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> String {
        return String(decoding: encoded.enumerated().map { offset, element in
            element ^ cipher[offset % cipher.count]
        }, as: UTF8.self)
    }
}

public extension Keys {
    struct Global: KeysGlobalProtocol {
        public init() {}

        @inline(__always)
        public let foursquareClientID: String = {
            let encoded: [UInt8] = [
                0xbd, 0xea, 0xd7, 0x25, 0x98, 0x87, 0xfe, 0x53, 0x73, 0x90, 0xf5, 0xec, 0x7f, 0xe1, 0xbc, 0x2, 0x89, 0xdc, 0xb3, 0x1d, 0x73, 0xe2, 0xec, 0xbe, 0xaa, 0x53, 0x9f, 0xb4, 0xbb, 0xe3, 0x74, 0x6, 0xbc, 0x51, 0x31, 0x91, 0xee, 0x2f, 0x22, 0xa1, 0xaf, 0xac, 0xb1, 0xad, 0x51, 0x3c, 0xc4, 0xab
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()

        @inline(__always)
        public let foursquareClientSecret: String = {
            let encoded: [UInt8] = [
                0xb8, 0xe7, 0xdd, 0x2a, 0x9b, 0xf1, 0x8d, 0x58, 0x65, 0x85, 0xf1, 0x8c, 0x76, 0xee, 0xbc, 0x1, 0x8e, 0xc6, 0xbf, 0x1f, 0x7d, 0x88, 0x92, 0xa6, 0xb6, 0x4c, 0x9a, 0xc9, 0xa9, 0x87, 0x7d, 0x6, 0xa0, 0x5f, 0x4a, 0x91, 0x9e, 0x33, 0x3f, 0xa3, 0xa8, 0xb9, 0xc2, 0xd7, 0x47, 0x35, 0xc4, 0xa4
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()
    }
}

public extension Keys {
    struct Debug: KeysEnvironmentProtocol {
        public init() {}

        @inline(__always)
        public let foursquareAPIKey: String = {
            let encoded: [UInt8] = [
                0x88, 0xdd, 0xe4, 0x5a, 0xf3, 0xf2, 0xca, 0x55, 0x5, 0xab, 0xa2, 0xab, 0x6, 0xd6, 0xe6, 0x77, 0xc8, 0xb8, 0x8c, 0x2, 0x45, 0xa7, 0xcc, 0xa8, 0xad, 0x45, 0x97, 0xcd, 0xb3, 0xd0, 0x7c, 0x7e, 0xaa, 0x3f, 0x54, 0xb8, 0x9c, 0x21, 0x1c, 0x83, 0xb6, 0x9c, 0x88, 0xa3, 0x71, 0x8, 0xd9, 0xd7
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()
    }
}
public extension Keys {
    struct Release: KeysEnvironmentProtocol {
        public init() {}

        @inline(__always)
        public let foursquareAPIKey: String = {
            let encoded: [UInt8] = [
                0x88, 0xdd, 0xe4, 0x5a, 0xa3, 0xa7, 0xef, 0x69, 0x50, 0x82, 0x95, 0xf7, 0x6, 0x94, 0xc9, 0x1, 0xfa, 0xee, 0xc9, 0x15, 0x61, 0xe9, 0xc7, 0xa2, 0xac, 0x6c, 0xa4, 0xa8, 0xb4, 0xd1, 0x58, 0x44, 0x8c, 0x20, 0x34, 0xe2, 0x92, 0x3a, 0x1d, 0x9c, 0x8d, 0xbe, 0x85, 0xb0, 0x44, 0x29, 0xc1, 0xd7
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()
    }
}
