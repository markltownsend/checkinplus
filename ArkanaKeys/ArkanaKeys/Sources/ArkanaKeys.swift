// DO NOT MODIFY
// Automatically generated by Arkana (https://github.com/rogerluan/arkana)

import ArkanaKeysInterfaces
import Foundation

public enum Keys {
    @inline(__always)
    fileprivate static let salt: [UInt8] = [
        0xAA, 0x4F, 0x20, 0x25, 0x31, 0x2A, 0x9D, 0x33, 0x9C, 0xB4, 0x4C, 0xCF, 0x7E, 0xC3, 0x1B, 0x38, 0x86, 0xD2, 0xEF, 0x8A, 0xD7, 0x1F, 0xEF, 0x80, 0xC8, 0x7, 0x4B, 0xA1, 0x9, 0x82, 0x3C, 0xBE, 0x6E, 0x16, 0x7E, 0x9B, 0x36, 0x49, 0x51, 0x40, 0xD0, 0xA5, 0xB8, 0xB8, 0x40, 0xA7, 0x59, 0x77, 0xAB, 0x5A, 0x42, 0x37, 0x49, 0xB1, 0xF7, 0xB2, 0x68, 0xEA, 0xB2, 0xFF, 0x83, 0x1A, 0xF7, 0xE7,
    ]

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> String {
        String(decoding: encoded.enumerated().map { offset, element in
            element ^ cipher[offset % cipher.count]
        }, as: UTF8.self)
    }
}

public extension Keys {
    struct Global: KeysGlobalProtocol {
        public init() {}

        @inline(__always)
        public let foursquareClientID: String = {
            let encoded: [UInt8] = [
                0xF9, 0xB, 0x62, 0x69, 0x68, 0x6E, 0xDA, 0x7B, 0xD8, 0xE3, 0x7D, 0xFF, 0x31, 0x8E, 0x2F, 0x7A, 0xB3, 0x99, 0xA6, 0xC5, 0x90, 0x2C, 0xA3, 0xD2, 0x82, 0x50, 0, 0xEC, 0x43, 0xD4, 0x7A, 0x8E, 0x3C, 0x57, 0x4E, 0xDA, 0x5, 0xC, 0x4, 0x11, 0x85, 0xE4, 0xF9, 0xF0, 0x11, 0xE4, 0xD, 0x36,
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()

        @inline(__always)
        public let foursquareClientSecret: String = {
            let encoded: [UInt8] = [
                0xFC, 0x6, 0x68, 0x66, 0x6B, 0x18, 0xA9, 0x70, 0xCE, 0xF6, 0x79, 0x9F, 0x38, 0x81, 0x2F, 0x79, 0xB4, 0x83, 0xAA, 0xC7, 0x9E, 0x46, 0xDD, 0xCA, 0x9E, 0x4F, 0x5, 0x91, 0x51, 0xB0, 0x73, 0x8E, 0x20, 0x59, 0x35, 0xDA, 0x75, 0x10, 0x19, 0x13, 0x82, 0xF1, 0x8A, 0x8A, 0x7, 0xED, 0xD, 0x39,
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()
    }
}
