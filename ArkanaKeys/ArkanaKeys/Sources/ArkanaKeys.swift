// DO NOT MODIFY
// Automatically generated by Arkana (https://github.com/rogerluan/arkana)

import Foundation
import ArkanaKeysInterfaces

public enum Keys {
    @inline(__always)
    fileprivate static let salt: [UInt8] = [
        0xaa, 0x4f, 0x20, 0x25, 0x31, 0x2a, 0x9d, 0x33, 0x9c, 0xb4, 0x4c, 0xcf, 0x7e, 0xc3, 0x1b, 0x38, 0x86, 0xd2, 0xef, 0x8a, 0xd7, 0x1f, 0xef, 0x80, 0xc8, 0x7, 0x4b, 0xa1, 0x9, 0x82, 0x3c, 0xbe, 0x6e, 0x16, 0x7e, 0x9b, 0x36, 0x49, 0x51, 0x40, 0xd0, 0xa5, 0xb8, 0xb8, 0x40, 0xa7, 0x59, 0x77, 0xab, 0x5a, 0x42, 0x37, 0x49, 0xb1, 0xf7, 0xb2, 0x68, 0xea, 0xb2, 0xff, 0x83, 0x1a, 0xf7, 0xe7
    ]

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> String {
        return String(decoding: encoded.enumerated().map { offset, element in
            element ^ cipher[offset % cipher.count]
        }, as: UTF8.self)
    }
}

public extension Keys {
    struct Global: KeysGlobalProtocol {
        public init() {}

        @inline(__always)
        public let foursquareClientID: String = {
            let encoded: [UInt8] = [
                0xf9, 0xb, 0x62, 0x69, 0x68, 0x6e, 0xda, 0x7b, 0xd8, 0xe3, 0x7d, 0xff, 0x31, 0x8e, 0x2f, 0x7a, 0xb3, 0x99, 0xa6, 0xc5, 0x90, 0x2c, 0xa3, 0xd2, 0x82, 0x50, 0, 0xec, 0x43, 0xd4, 0x7a, 0x8e, 0x3c, 0x57, 0x4e, 0xda, 0x5, 0xc, 0x4, 0x11, 0x85, 0xe4, 0xf9, 0xf0, 0x11, 0xe4, 0xd, 0x36
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()

        @inline(__always)
        public let foursquareClientSecret: String = {
            let encoded: [UInt8] = [
                0xfc, 0x6, 0x68, 0x66, 0x6b, 0x18, 0xa9, 0x70, 0xce, 0xf6, 0x79, 0x9f, 0x38, 0x81, 0x2f, 0x79, 0xb4, 0x83, 0xaa, 0xc7, 0x9e, 0x46, 0xdd, 0xca, 0x9e, 0x4f, 0x5, 0x91, 0x51, 0xb0, 0x73, 0x8e, 0x20, 0x59, 0x35, 0xda, 0x75, 0x10, 0x19, 0x13, 0x82, 0xf1, 0x8a, 0x8a, 0x7, 0xed, 0xd, 0x39
            ]
            return Keys.decode(encoded: encoded, cipher: Keys.salt)
        }()
    }
}

